#include <stdio.h>
#include <string.h>

#define SIZE 15

char stack[SIZE];
int top = -1;

//menambah elemen ke dalam stack
void push(char value) 
{
  if(top == SIZE - 1) 
  {
    printf("Stack penuh\n");
    return;
  }
  top++;
  stack[top] = value;
}

//menghapus elemen dari stack
char pop() 
{
  if(top == -1) 
  {
    printf("Stack kosong\n");
  }
  char value = stack[top];
  top--;
  return value;
}

//memeriksa keseimbangan tanda kurung
int brackets(char data1, char data2) 
{
  if(data1 == '(' && data2 == ')') 
  {
    return 1;
  } else if(data1 == '[' && data2 == ']') 
  {
    return 1;
  } else if(data1 == '{' && data2 == '}') 
  {
    return 1;
  } else 
  {
    return 0;
  }
}

//mengecek apakah tanda kurung berpasangan
int isBalanced(char *text) 
{
  int i;
  for(i = 0; i < strlen(text); i++) 
  {
    if(text[i] == '(' || text[i] == '[' || text[i] == '{') 
    {
      push(text[i]);
    } else if(text[i] == ')' || text[i] == ']' || text[i] == '}') 
    {
      if(top == -1) 
      {
        return 0;
      } else if(!brackets(pop(), text[i])) 
      {
        return 0;
      }
    }
  }
  if(top == -1) 
  {
    return 1;
  } else 
  {
    return 0;
  }
}

int main() {
  char text[SIZE];
  fgets(text, SIZE, stdin);

  if(isBalanced(text)) 
  {
    printf("YES\n");
  } else 
  {
    printf("NO\n");
  }
  return 0;
}
